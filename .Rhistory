HispanicLation_renter = "B25003I_003")
TenureByRace <- get_acs(geography = "tract",
variables = racevars,
year = 2020,
state = "51",
survey = "acs5",
county = cvl,
output = "wide")
#Gini Index Table also included
Povertyvars <- c(BelowPoverty_White = "B17020A_002", AbovePoverty_White = "B17020A_010", BelowPoverty_Black = "B17020B_002",
AbovePoverty_Black = "B17020B_010", BelowPoverty_NativeAm = "B17020C_002", AbovePoverty_NativeAm = "B17020C_010",
BelowPoverty_Asian = "B17020D_002", AbovePoverty_Asian = "B17020D_010", BelowPoverty_PacificIslander = "B17020E_002",
AbovePoverty_PacificIslander = "B17020E_010", BelowPoverty_HispanicLatino = "B17020I_002",
AbovePoverty_HispanicLatino = "B17020I_010", Gini_Index = "B19083_001")
PovertyByRace <- get_acs(geography = "tract",
variables = Povertyvars,
year = 2020,
state = "51",
survey = "acs5",
county = cvl,
output = "wide")
PovertyByRace <- PovertyByRace %>%
mutate(Perc_BelowPoverty_WhiteE = round((BelowPoverty_WhiteE/(BelowPoverty_WhiteE + AbovePoverty_WhiteE))*100, 2),
Perc_BelowPoverty_BlackE = round((BelowPoverty_BlackE/(BelowPoverty_BlackE + AbovePoverty_BlackE))*100, 2),
Perc_BelowPoverty_AsianE = round((BelowPoverty_AsianE/(BelowPoverty_AsianE + AbovePoverty_AsianE))*100, 2),
Perc_BelowPoverty_PacificIslanderE = round((BelowPoverty_PacificIslanderE/(BelowPoverty_PacificIslanderE + AbovePoverty_PacificIslanderE))*100, 2),
Perc_BelowPoverty_NativeAmE = round((BelowPoverty_NativeAmE/(BelowPoverty_NativeAmE + AbovePoverty_NativeAmE))*100, 2),
Perc_BelowPoverty_HispanicLatinoE = round((BelowPoverty_HispanicLatinoE/(BelowPoverty_HispanicLatinoE + AbovePoverty_HispanicLatinoE))*100, 2),
Perc_BelowPoverty_WhiteM = round((BelowPoverty_WhiteM/(BelowPoverty_WhiteM + AbovePoverty_WhiteM))*100, 2),
Perc_BelowPoverty_BlackM = round((BelowPoverty_BlackM/(BelowPoverty_BlackM + AbovePoverty_BlackM))*100, 2),
Perc_BelowPoverty_AsianM = round((BelowPoverty_AsianM/(BelowPoverty_AsianM + AbovePoverty_AsianM))*100, 2),
Perc_BelowPoverty_PacificIslanderM = round((BelowPoverty_PacificIslanderM/(BelowPoverty_PacificIslanderM + AbovePoverty_PacificIslanderM))*100, 2),
Perc_BelowPoverty_NativeAmM = round((BelowPoverty_NativeAmM/(BelowPoverty_NativeAmM + AbovePoverty_NativeAmM))*100, 2),
Perc_BelowPoverty_HispanicLatinoM = round((BelowPoverty_HispanicLatinoM/(BelowPoverty_HispanicLatinoM + AbovePoverty_HispanicLatinoM))*100, 2))
# Wrangling
# rename variables
# create rent/tax ratio
# add variable for locality: str_contains
# save/output prepped data
# Try reading in exported data to R markdown
# Basic exploration of data
#chanigng column names, creating rent/tax ratio, adding new column for county, reording columns
cvlcharlottlesville <- c("003", "540", "079","109", "065", "125")
cvlrichmond <- c("760", "087", "041", "670", "730")
cvl_rent2 <- cvl_rent2 |>
mutate(RentTaxRatio = MedianRentE/MedianTaxesE,
RentTaxRatioMOE = moe_ratio(MedianRentE, MedianTaxesE, MedianRentM, MedianTaxesM),
County_fips = str_sub(GEOID, 3,5),
County = case_when(
str_detect(GEOID, "51540") ~ "Charlottesville",
str_detect(GEOID, "51109") ~ "Louisa",
str_detect(GEOID, "51125") ~ "Nelson",
str_detect(GEOID, "51065") ~ "Fluvanna",
str_detect(GEOID, "51003") ~ "Albemarle",
str_detect(GEOID, "51079") ~ "Greene",
str_detect(GEOID, "51760") ~ "Richmond City",
str_detect(GEOID, "51087") ~ "Henrico",
str_detect(GEOID, "51041") ~ "Chesterfield",
str_detect(GEOID, "51670") ~ "Hopewell",
str_detect(GEOID, "51730") ~ "Petersburg City"
),
Region = case_when(
County_fips %in% cvlcharlottlesville ~ "Charlottlesville",
County_fips %in% cvlrichmond ~ "Richmond"
),
Perc_StudentsE = round(((Undergrad_PopE + Grad_PopE)/(Total_PopE))*100, 2),
Perc_StudentsM = round(((Undergrad_PopM + Grad_PopM)/(Total_PopM))*100, 2))|>
select(1, 19, 2, 20, 21, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23)
#cvl_rent2 <- cvl_rent2 %>%
# select(1, 13, 2, 14, 15, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
TenureByRace <- TenureByRace %>%
mutate(County_fips = str_sub(GEOID, 3,5),
County = case_when(
str_detect(GEOID, "51540") ~ "Charlottesville",
str_detect(GEOID, "51109") ~ "Louisa",
str_detect(GEOID, "51125") ~ "Nelson",
str_detect(GEOID, "51065") ~ "Fluvanna",
str_detect(GEOID, "51003") ~ "Albemarle",
str_detect(GEOID, "51079") ~ "Greene",
str_detect(GEOID, "51760") ~ "Richmond City",
str_detect(GEOID, "51087") ~ "Henrico",
str_detect(GEOID, "51041") ~ "Chesterfield",
str_detect(GEOID, "51670") ~ "Hopewell",
str_detect(GEOID, "51730") ~ "Petersburg City"
),
Region = case_when(
County_fips %in% cvlcharlottlesville ~ "Charlottlesville",
County_fips %in% cvlrichmond ~ "Richmond"
)) |>
select(1, 27, 2, 28, 29, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26)
PovertyByRace <- PovertyByRace %>%
mutate(County_fips = str_sub(GEOID, 3,5),
County = case_when(
str_detect(GEOID, "51540") ~ "Charlottesville",
str_detect(GEOID, "51109") ~ "Louisa",
str_detect(GEOID, "51125") ~ "Nelson",
str_detect(GEOID, "51065") ~ "Fluvanna",
str_detect(GEOID, "51003") ~ "Albemarle",
str_detect(GEOID, "51079") ~ "Greene",
str_detect(GEOID, "51760") ~ "Richmond City",
str_detect(GEOID, "51087") ~ "Henrico",
str_detect(GEOID, "51041") ~ "Chesterfield",
str_detect(GEOID, "51670") ~ "Hopewell",
str_detect(GEOID, "51730") ~ "Petersburg City"
),
Region = case_when(
County_fips %in% cvlcharlottlesville ~ "Charlottlesville",
County_fips %in% cvlrichmond ~ "Richmond"
)) |>
select(1,41, 2, 42, 43, 3:40)
cvl_rent2$MedianIncomeE <- IncomeByTenure$B25119_003E
cvl_rent2$MedianIncomeM <- IncomeByTenure$B25119_003M
v20 <- load_variables(2020, "acs5", cache = TRUE)
TenureByIncome <- v20 %>%
filter(str_detect(name, "B25118")) %>%
full_join(TenureByIncome, v20, by = c("name" = "variable")) %>%
select(1,2,5,6,7,8)
TenureByIncome <- TenureByIncome %>%
mutate(County = case_when(
str_detect(GEOID, "51540") ~ "Charlottesville",
str_detect(GEOID, "51109") ~ "Louisa",
str_detect(GEOID, "51125") ~ "Nelson",
str_detect(GEOID, "51065") ~ "Fluvanna",
str_detect(GEOID, "51003") ~ "Albemarle",
str_detect(GEOID, "51079") ~ "Greene",
str_detect(GEOID, "51760") ~ "Richmond City",
str_detect(GEOID, "51087") ~ "Henrico",
str_detect(GEOID, "51041") ~ "Chesterfield",
str_detect(GEOID, "51670") ~ "Hopewell",
str_detect(GEOID, "51730") ~ "Petersburg City"
)) |>
select(3, 4, 7, 1, 2, 5, 6)
cvlcharlottlesville <- c("003", "540", "079","109", "065", "125")
cvlrichmond <- c("760", "087", "041", "670", "730")
TenureByIncome <- TenureByIncome %>%
mutate(County_fips = str_sub(GEOID, 3,5),
label = case_when(
label %in% "Estimate!!Total:!!Renter occupied:!!$150,000 or more" ~ "Renter occupied: $>150k",
label %in% "Estimate!!Total:!!Renter occupied:!!$100,000 to $149,999" ~ "Renter occupied: $100k to  $149,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$75,000 to $99,999" ~ "Renter occupied: $75k to $99,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$50,000 to $74,999" ~ "Renter occupied: $50k to $74,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$35,000 to $49,999" ~ "Renter occupied: $35k to $49,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$25,000 to $34,999" ~ "Renter occupied: $25k to $34,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$20,000 to $24,999" ~ "Renter occupied: $20k to $24,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$15,000 to $19,999" ~ "Renter occupied: $15k to $19,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$10,000 to $14,999" ~ "Renter occupied: $10k to $14,999",
label %in% "Estimate!!Total:!!Renter occupied:!!$5,000 to $9,999" ~ "Renter occupied: $5k to $9,999",
label %in% "Estimate!!Total:!!Renter occupied:!!Less than $5,000" ~ "Renter occupied: <$5k",
label %in% "Estimate!!Total:!!Renter occupied:" ~ "Renter Occupied",
label %in% "Estimate!!Total:!!Owner occupied:!!$150,000 or more" ~ "Owner occupied: $>150k",
label %in% "Estimate!!Total:!!Owner occupied:!!$100,000 to $149,999" ~ "Owner occupied: $100k to  $149,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$75,000 to $99,999" ~ "Owner occupied: $75k to $99,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$50,000 to $74,999" ~ "Owner occupied: $50k to $74,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$35,000 to $49,999" ~ "Owner occupied: $35k to $49,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$25,000 to $34,999" ~ "Owner occupied: $25k to $34,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$20,000 to $24,999" ~ "Owner occupied: $20k to $24,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$15,000 to $19,999" ~ "Owner occupied: $15k to $19,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$10,000 to $14,999" ~ "Owner occupied: $10k to $14,999",
label %in% "Estimate!!Total:!!Owner occupied:!!$5,000 to $9,999" ~ "Owner occupied: $5k to $9,999",
label %in% "Estimate!!Total:!!Owner occupied:!!Less than $5,000" ~ "Owner occupied: <$5k",
label %in% "Estimate!!Total:!!Owner occupied:" ~ "Owner Occupied",
label %in% "Estimate!!Total:" ~ "Total"),
Region = case_when(
County_fips %in% cvlcharlottlesville ~ "Charlottlesville",
County_fips %in% cvlrichmond ~ "Richmond")
)  %>%
rename(Variable_Code = name, Variable = label) %>%
select(1, 8, 2, 3, 9, 4, 5, 6, 7)
charlottesvillemsa <- c("003", "540", "079", "065", "125")
Above_median <- c("Renter occupied: $>150k", "Renter occupied: $100k to  $149,999", "Owner occupied: $>150k", "Owner occupied: $100k to  $149,999")
lowincome <- c("Renter occupied: $50k to $74,999", "Owner occupied: $50k to $74,999")
very_lowincome <- c("Renter occupied: $35k to $49,999", "Owner occupied: $35k to $49,999")
extremely_lowincome <- c("Renter occupied: $25k to $34,999", "Renter occupied: $20k to $24,999", "Owner occupied: $25k to $34,999", "Owner occupied: $20k to $24,999")
below_avgpovertylvl <- c("Renter occupied: $15k to $19,999", "Renter occupied: $10k to $14,999", "Renter occupied: $5k to $9,999", "Renter occupied: <$5k", "Owner occupied: $15k to $19,999", "Owner occupied: $10k to $14,999", "Owner occupied: $5k to $9,999", "Owner occupied: <$5k")
Tenure_By_Income %>%
for (County_fips in charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
Tenure_By_Income %>%
if (County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
Tenure_By_Income %>%
if (County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
if (County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for (i in cTBI) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for (i in 1:cTBI) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for (i in 1:len(cTBI)) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for(i in 1:len(TenureByIncome) {
if(County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
for(i in 1:len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
for(i in 1:len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
library(tidycensus)
library(tidyverse)
TenureByIncome %>%
for(i in 1:len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
for(i in (1:len(TenureByIncome))){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
),
i+ 1 = i
}
}
i = 0
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
),
i+ 1 = i
}
}
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
),
i++
}
}
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
)
}
i = i + 1
}
#Table for Tenure (renter or owner)
Tenure <- get_acs(geography = "tract",
variables =  tvars,
year = 2020,
state = "51",
survey = "acs5",
county = cvl,
output = "wide")
tvars <- c(Total_Occupants = "B25003_001", Owners = "B25003_002", Renters = "B25003_003")
#Table for Tenure (renter or owner)
Tenure <- get_acs(geography = "tract",
variables =  tvars,
year = 2020,
state = "51",
survey = "acs5",
county = cvl,
output = "wide")
write.csv(Tenure, "C:/Users/smang/OneDrive/Housing Justice DJA/rentexploitationproject/Data Cleaning/Tenure.csv", row.names = FALSE)
Tenure <- read_csv("Tenure.csv")
View(TenureByRace)
View(Tenure)
Tenure <- Tenure %>%
mutate(County_fips = str_sub(GEOID, 3,5),
County = case_when(
str_detect(GEOID, "51540") ~ "Charlottesville",
str_detect(GEOID, "51109") ~ "Louisa",
str_detect(GEOID, "51125") ~ "Nelson",
str_detect(GEOID, "51065") ~ "Fluvanna",
str_detect(GEOID, "51003") ~ "Albemarle",
str_detect(GEOID, "51079") ~ "Greene",
str_detect(GEOID, "51760") ~ "Richmond City",
str_detect(GEOID, "51087") ~ "Henrico",
str_detect(GEOID, "51041") ~ "Chesterfield",
str_detect(GEOID, "51670") ~ "Hopewell",
str_detect(GEOID, "51730") ~ "Petersburg City"
),
Region = case_when(
County_fips %in% cvlcharlottlesville ~ "Charlottlesville",
County_fips %in% cvlrichmond ~ "Richmond"
))
View(PovertyByRace)
View(Tenure)
View(Tenure)
Tenure %>%
mutate(round(Perc_rentersE = (RentersE/Total_OccupantsE), 2)) %>%
group_by(County) %>%
summarize(MedianRenters = median(Perc_rentersE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(MedianRenters = median(Perc_rentersE))
View(Tenure)
full_join(Tenure, Tenure_By_Race, by = "GEOID")
Tenure_By_Race <- read_csv("Tenurebyrace.csv")
full_join(Tenure, Tenure_By_Race, by = "GEOID")
Tenure <- Tenure[, 3:9]
colnames(Tenure_By_Race)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((Pacificislander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownersE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLatino_renterE/Total_OccupantsE)))
Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((Pacificislander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownersE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLatino_renterE/Total_OccupantsE)))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownersE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLatino_renterE/Total_OccupantsE)))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE)))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
round(2)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
round(select(2:14), 2)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate_if(is.numeric, round(2))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate_if(is.numeric, round)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
sapply(select[2:14], function(x) percent(x, accuracy=0.1))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
sapply(Tenure[2:14], function(x) percent(x, accuracy=0.1))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
sapply(select(2:14), function(x) percent(x, accuracy=0.1))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
percent(select(2:14), accuracy=0.1)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
scales::percent(select(2:14), accuracy=0.1)
mutate(across(c(2:14), scales::percent)
Tenure %>%
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent))
