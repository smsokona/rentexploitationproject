if (County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
Tenure_By_Income %>%
if (County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
if (County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for (i in cTBI) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for (i in 1:cTBI) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for (i in 1:len(cTBI)) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
TenureByIncome %>%
for(i in 1:len(TenureByIncome) {
if(County_fips %in% charlottesvillemsa) {
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
for(i in 1:len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
for(i in 1:len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
library(tidycensus)
library(tidyverse)
TenureByIncome %>%
for(i in 1:len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
for(i in (1:len(TenureByIncome))){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level",
)
)
}
}
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
),
i+ 1 = i
}
}
i = 0
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
),
i+ 1 = i
}
}
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
),
i++
}
}
TenureByIncome %>%
while(i < len(TenureByIncome)){
if(TenureByIncome$County_fips %in% charlottesvillemsa){
mutate(Income_Level = case_when(
Variable %in% Above_median ~ "Above Med Family Income",
Variable %in% lowincome ~ "Low Income",
Variable %in% very_lowincome ~ "Very Low Income",
Variable %in% extremely_lowincome ~ "Extremely Low Income",
Variable %in% below_avgpovertylvl ~ "Below National Avg. Poverty Level"
)
)
}
i = i + 1
}
#Table for Tenure (renter or owner)
Tenure <- get_acs(geography = "tract",
variables =  tvars,
year = 2020,
state = "51",
survey = "acs5",
county = cvl,
output = "wide")
tvars <- c(Total_Occupants = "B25003_001", Owners = "B25003_002", Renters = "B25003_003")
#Table for Tenure (renter or owner)
Tenure <- get_acs(geography = "tract",
variables =  tvars,
year = 2020,
state = "51",
survey = "acs5",
county = cvl,
output = "wide")
write.csv(Tenure, "C:/Users/smang/OneDrive/Housing Justice DJA/rentexploitationproject/Data Cleaning/Tenure.csv", row.names = FALSE)
Tenure <- read_csv("Tenure.csv")
View(TenureByRace)
View(Tenure)
Tenure <- Tenure %>%
mutate(County_fips = str_sub(GEOID, 3,5),
County = case_when(
str_detect(GEOID, "51540") ~ "Charlottesville",
str_detect(GEOID, "51109") ~ "Louisa",
str_detect(GEOID, "51125") ~ "Nelson",
str_detect(GEOID, "51065") ~ "Fluvanna",
str_detect(GEOID, "51003") ~ "Albemarle",
str_detect(GEOID, "51079") ~ "Greene",
str_detect(GEOID, "51760") ~ "Richmond City",
str_detect(GEOID, "51087") ~ "Henrico",
str_detect(GEOID, "51041") ~ "Chesterfield",
str_detect(GEOID, "51670") ~ "Hopewell",
str_detect(GEOID, "51730") ~ "Petersburg City"
),
Region = case_when(
County_fips %in% cvlcharlottlesville ~ "Charlottlesville",
County_fips %in% cvlrichmond ~ "Richmond"
))
View(PovertyByRace)
View(Tenure)
View(Tenure)
Tenure %>%
mutate(round(Perc_rentersE = (RentersE/Total_OccupantsE), 2)) %>%
group_by(County) %>%
summarize(MedianRenters = median(Perc_rentersE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(MedianRenters = median(Perc_rentersE))
View(Tenure)
full_join(Tenure, Tenure_By_Race, by = "GEOID")
Tenure_By_Race <- read_csv("Tenurebyrace.csv")
full_join(Tenure, Tenure_By_Race, by = "GEOID")
Tenure <- Tenure[, 3:9]
colnames(Tenure_By_Race)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((Pacificislander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownersE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLatino_renterE/Total_OccupantsE)))
Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((Pacificislander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownersE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLatino_renterE/Total_OccupantsE)))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownersE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLatino_renterE/Total_OccupantsE)))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE)), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE)), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE)), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE)), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE)), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE)),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE)), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE)), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE)), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE)), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE)), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE)))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
round(2)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
round(select(2:14), 2)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate_if(is.numeric, round(2))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate_if(is.numeric, round)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
sapply(select[2:14], function(x) percent(x, accuracy=0.1))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
sapply(Tenure[2:14], function(x) percent(x, accuracy=0.1))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
sapply(select(2:14), function(x) percent(x, accuracy=0.1))
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
percent(select(2:14), accuracy=0.1)
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
scales::percent(select(2:14), accuracy=0.1)
mutate(across(c(2:14), scales::percent)
Tenure %>%
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent))
ACS_Housing_Data <- read_csv("Housing_Data.csv")
#importing data
library(readr)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
ACS_Housing_Data <- read_csv("Housing_Data.csv")
ACS_Housing_Data %>%
filter(County == "Charlottesville") %>%
ggplot(aes(x = NAME, y = Perc_StudentsE)) +
geom_col
ACS_Housing_Data %>%
filter(County == "Charlottesville") %>%
ggplot(aes(x = NAME, y = Perc_StudentsE)) +
geom_col()
ACS_Housing_Data %>%
filter(County == "Charlottesville") %>%
ggplot(aes(x = NAME, y = Perc_StudentsE)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
library(readr)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
cvl <- c("003", "540", "079","109", "065", "125", "760", "087", "041", "670", "730")
countytracts <- tracts(state = "VA", county = cvl, year = 2020)
View(countytracts)
counties <- c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa", "Nelson", "Richmond", "Henrico", "Chesterfield", "Hopewell", "Petersburg")
countytracts <- tracts(state = "VA", county = cvl, year = 2020)
countytracts <- tracts(state = "VA", county = counties, year = 2020)
counties <- c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa", "Nelson", "Richmond city", "Henrico", "Chesterfield", "Hopewell", "Petersburg")
countytracts <- tracts(state = "VA", county = counties, year = 2020)
View(countytracts)
countytracts <- countytracts |>
mutate(GEOID = as.numeric(countytracts$GEOID))
HousingDataSpatial <- full_join(ACS_Housing_Data, countytracts, by = "GEOID") |>
sf::st_as_sf() |>
mutate(INTPTLAT = as.numeric(countytracts$INTPTLAT), INTPTLON = as.numeric(countytracts$INTPTLON))|>
sf::st_transform(crs = '+proj=longlat +datum=WGS84') #one way to reference a CRS, another way (which Claibourne used) is cvl_rents <- st_transform(cvl_rents, 4326) because leaflet expects the crs to be 4326
pal <-  colorNumeric("YlOrRd", HousingDataSpatial$Perc_StudentsE, reverse = TRUE) #the reverse argument reverses the color palette
#creating map and adding layers
leaflet(HousingDataSpatial) %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~Name.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(Perc_StudentsE),
label = ~Perc_StudentsE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Estimated Rent to Tax Ratio for 2020",
position = "bottomleft")
#creating map and adding layers
leaflet(HousingDataSpatial) %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(Perc_StudentsE),
label = ~Perc_StudentsE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Estimated Rent to Tax Ratio for 2020",
position = "bottomleft")
perc_student_counties <- c("Richmond", "Charlottesville", "Henrico")
HousingDataSpatial %>%
filter(county %in% perc_student_counties) %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(Perc_StudentsE),
label = ~Perc_StudentsE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Highest Percentage of Students in Charlottesville and Richmond regions for 2020",
position = "bottomleft")
HousingDataSpatial %>%
filter(County %in% perc_student_counties) %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(Perc_StudentsE),
label = ~Perc_StudentsE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Highest Percentage of Students in Charlottesville and Richmond regions for 2020",
position = "bottomleft")
View(HousingDataSpatial)
perc_student_counties <- c("Richmond City", "Charlottesville", "Henrico")
HousingDataSpatial %>%
filter(County %in% perc_student_counties) %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillOpacity = 0.1,
weight = 2) %>%
addLabelOnlyMarkers(lng = ~INTPTLON, lat = ~INTPTLAT, label = ~NAME.y,
labelOptions = labelOptions(noHide = TRUE)) %>% #labels census tracts
addPolygons(stroke = FALSE, fillOpacity = 0.8,
smoothFactor = 0.5,
color = ~pal(Perc_StudentsE),
label = ~Perc_StudentsE,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Highest Percentage of Students in Charlottesville and Richmond regions for 2020",
position = "bottomleft")
HousingDataSpatial %>%
filter(County == "Henrico") %>%
ggplot(aes(x = NAME.y, y = Perc_StudentsE)) +
geom_col()
HousingDataSpatial %>%
filter(County == "Henrico") %>%
ggplot(aes(x = NAME.y, y = Perc_StudentsE)) +
geom_col() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Tenure <- Tenure[, 3:9]
Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent))
Tenure <- read_csv("Tenure.csv")
Tenure <- Tenure[, 3:9]
Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Median_Perc_Renters = median(Perc_rentersE, na.rm = TRUE), Median_Perc_WRenters = median((White_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_WOwners = median((White_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BRenters = median((Black_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_BOwners = median((Black_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmOwners = median((NativeAm_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_NativeAmRenters = median((NativeAm_rentersE/Total_OccupantsE), na.rm = TRUE),  Median_Perc_AsianOwners = median((Asian_ownersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_AsianRenters = median((Asian_rentersE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderOwner = median((PacificIslander_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_PacificIslanderRenter = median((PacificIslander_renterE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLatinoOwner = median((HispanicLatino_ownerE/Total_OccupantsE), na.rm = TRUE), Median_Perc_HispanicLationRenterE = median((HispanicLation_renterE/Total_OccupantsE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent))
Tenure %>%
mutate(Median_Perc_WRenters = (White_rentersE/Total_OccupantsE), Median_Perc_WOwners = (White_ownersE/Total_OccupantsE), Median_Perc_BRenters = (Black_rentersE/Total_OccupantsE), Median_Perc_BOwners =(Black_ownersE/Total_OccupantsE), Median_Perc_NativeAmOwners = (NativeAm_ownersE/Total_OccupantsE), Median_Perc_NativeAmRenters = (NativeAm_rentersE/Total_OccupantsE),  Median_Perc_AsianOwners = m(Asian_ownersE/Total_OccupantsE), Median_Perc_AsianRenters = (Asian_rentersE/Total_OccupantsE), Median_Perc_PacificIslanderOwner = (PacificIslander_ownerE/Total_OccupantsE), Median_Perc_PacificIslanderRenter = (PacificIslander_renterE/Total_OccupantsE), Median_Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/Total_OccupantsE), Median_Perc_HispanicLationRenterE = (HispanicLation_renterE/Total_OccupantsE))
Tenure %>%
mutate(Median_Perc_WRenters = (White_rentersE/Total_OccupantsE), Median_Perc_WOwners = (White_ownersE/Total_OccupantsE), Median_Perc_BRenters = (Black_rentersE/Total_OccupantsE), Median_Perc_BOwners =(Black_ownersE/Total_OccupantsE), Median_Perc_NativeAmOwners = (NativeAm_ownersE/Total_OccupantsE), Median_Perc_NativeAmRenters = (NativeAm_rentersE/Total_OccupantsE),  Median_Perc_AsianOwners = (Asian_ownersE/Total_OccupantsE), Median_Perc_AsianRenters = (Asian_rentersE/Total_OccupantsE), Median_Perc_PacificIslanderOwner = (PacificIslander_ownerE/Total_OccupantsE), Median_Perc_PacificIslanderRenter = (PacificIslander_renterE/Total_OccupantsE), Median_Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/Total_OccupantsE), Median_Perc_HispanicLationRenterE = (HispanicLation_renterE/Total_OccupantsE))
Tenure %>%
mutate(Median_Perc_WRenters = (White_rentersE/Total_OccupantsE), Median_Perc_WOwners = (White_ownersE/Total_OccupantsE), Median_Perc_BRenters = (Black_rentersE/Total_OccupantsE), Median_Perc_BOwners =(Black_ownersE/Total_OccupantsE), Median_Perc_NativeAmOwners = (NativeAm_ownersE/Total_OccupantsE), Median_Perc_NativeAmRenters = (NativeAm_rentersE/Total_OccupantsE),  Median_Perc_AsianOwners = (Asian_ownersE/Total_OccupantsE), Median_Perc_AsianRenters = (Asian_rentersE/Total_OccupantsE), Median_Perc_PacificIslanderOwner = (PacificIslander_ownerE/Total_OccupantsE), Median_Perc_PacificIslanderRenter = (PacificIslander_renterE/Total_OccupantsE), Median_Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/Total_OccupantsE), Median_Perc_HispanicLationRenterE = (HispanicLation_renterE/Total_OccupantsE),
across(c(36:47), scales::percent))
