))
DT_Tenure_By_Race <- Tenure_By_Race_Perc[,c(1,4:15)]
datatable(DT_Tenure_By_Race,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
container = sketch,
rownames = FALSE,
extensions = 'Buttons',
options = list(dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf')
)
)
#extra columns being shown??
#how to make data mpt extend screen and show on next page
#data dissappears when I add filter at the top?
counties <- c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa", "Nelson", "Richmond city", "Henrico", "Chesterfield", "Hopewell", "Petersburg")
countytracts <- tracts(state = "VA", county = counties, year = 2020)
#code_folding: "hide" (hides the code but ppl can see the code if they want to)
knitr::opts_chunk$set(echo =  TRUE, warning = FALSE, message = FALSE) #doesn't show the messages or the warings, only code output, must be its in own code chunk to apply to all the subsequent ones
#rent exploitation is another way racial capitalism works to extract resources from the black community, hidden from view, how are these things still operating but are less visible to the average viewer?
#importing data
library(readr)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
library(DT)
library(GGally)
library(RColorBrewer)
ACS_Housing_Data <- read_csv("Housing_Data.csv")
Income_By_Tenure <- read_csv("Income_By_Tenure.csv")
Tenure <- read_csv("Tenure.csv")
Tenure_By_Income <- read_csv("Tenure_By_Income.csv")
Tenure_By_Race <- read_csv("Tenurebyrace.csv")
Poverty_By_Race <- read_csv("PovertyByRace.csv")
cvl_rva_measures <- read_csv("cvl_rva_measures.csv")
race <- c("White","Black", "Asian", "Hispanic or Latino")
# Tenure <- Tenure[, 3:9]
# Tenure <- full_join(Tenure, Tenure_By_Race, by = "County_fips")
Tenure_By_Race_Perc <- Tenure_By_Race %>%
mutate(Perc_rentersE = (RentersE/Total_OccupantsE), Perc_ownersE = (OwnersE/Total_OccupantsE)) %>%
group_by(County) %>%
summarize(Renters = median(Perc_rentersE, na.rm = TRUE), Owners = median(Perc_ownersE, na.rm = TRUE), White_Renters = median((White_rentersE/RentersE), na.rm = TRUE), White_Owners = median((White_ownersE/OwnersE), na.rm = TRUE), Black_Renters = median((Black_rentersE/RentersE), na.rm = TRUE), Black_Owners = median((Black_ownersE/OwnersE), na.rm = TRUE), NativeAm_Owners = median((NativeAm_ownersE/OwnersE), na.rm = TRUE), NativeAm_Renters = median((NativeAm_rentersE/RentersE), na.rm = TRUE),  Asian_Owners = median((Asian_ownersE/OwnersE), na.rm = TRUE), Asian_Renters = median((Asian_rentersE/RentersE), na.rm = TRUE), PacificIslander_Owners = median((PacificIslander_ownerE/OwnersE), na.rm = TRUE), PacificIslander_Renters = median((PacificIslander_renterE/RentersE), na.rm = TRUE), HispanicLatino_Owners = median((HispanicLatino_ownerE/OwnersE), na.rm = TRUE), HispanicLatino_Renters = median((HispanicLation_renterE/RentersE), na.rm = TRUE)) %>%
mutate(across(c(2:14), scales::percent)) %>%
arrange(desc(Renters)) %>%
select(1:3,4,6,9,11,13,15,5,7,8,10,12,14)
sketch = htmltools::withTags(table(
class = 'display',
thead(
tr(
th(rowspan = 2, 'County'),
th(colspan = 6, 'Renters'),
th(colspan = 6, 'Owners')
),
tr(
lapply(c('White_Renters', 'Black_Renters', 'NativeAm_Renters', 'Asian_Renters', "PacificIslander_Renters", "HispanicLatino_Renters", 'White_Owners', 'Black_Owners', 'NativeAm_Owners', 'Asian_Owners', "PacificIslander_Owners", "HispanicLatino_Owners"), th)
)
)
))
DT_Tenure_By_Race <- Tenure_By_Race_Perc[,c(1,4:15)]
datatable(DT_Tenure_By_Race,
caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;',
'Table 1: ', htmltools::em('Median Percentage of Renters and Owners in Each County (by Demographics)')),
container = sketch,
rownames = FALSE,
extensions = 'Buttons',
options = list(dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf')
)
)
#how to make data mpt extend screen and show on next page
#can do a scatterplot matrix and DataTables to provide summary statistics
#maps, leaflets
#models
counties <- c("Albemarle", "Charlottesville", "Fluvanna", "Greene", "Louisa", "Nelson", "Richmond city", "Henrico", "Chesterfield", "Hopewell", "Petersburg")
countytracts <- tracts(state = "VA", county = counties, year = 2020)
countytracts <- countytracts |>
mutate(GEOID = as.numeric(countytracts$GEOID))
HousingDataSpatial <- full_join(ACS_Housing_Data, countytracts, by = "GEOID") |>
sf::st_as_sf() |>
mutate(INTPTLAT = as.numeric(countytracts$INTPTLAT), INTPTLON = as.numeric(countytracts$INTPTLON))|>
sf::st_transform(crs = '+proj=longlat +datum=WGS84') #one way to reference a CRS, another way (which Claibourne used) is cvl_rents <- st_transform(cvl_rents, 4326) because leaflet expects the crs to be 4326
pal <-  colorNumeric("YlOrRd", HousingDataSpatial$PercRentBurdenE, reverse = TRUE)
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal(PercRentBurdenE),
fillOpacity = 0.6,
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", HousingDataSpatial$County, "<br>",
"Tract: ", HousingDataSpatial$NAMELSAD, "<br>",
"Percentage of Rent Burden: ", HousingDataSpatial$PercRentBurdenE)) %>%
addLegend(pal = pal,
values = ~PercRentBurdenE,
opacity = 0.7,
title = "Percentage of Rent Burden (2020)",
position = "bottomleft")
perc_student_counties <- c("Richmond City", "Charlottesville", "Henrico")
pal1 <-  colorNumeric("YlOrRd", Moststudents$Perc_StudentsE, reverse = TRUE) #the reverse argument reverses the color palette
Moststudents <- HousingDataSpatial %>%
filter(County %in% perc_student_counties)
pal1 <-  colorNumeric("YlOrRd", Moststudents$Perc_StudentsE, reverse = TRUE) #the reverse argument reverses the color palette
Moststudents %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal1(Perc_StudentsE),
weight = 2,
fillOpacity = 0.6,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", Moststudents$County, "<br>",
"Tract: ", Moststudents$NAMELSAD, "<br>",
"Percentage of Rent Burden: ", Moststudents$Perc_StudentsE)) %>% #to add hovering functionality check what she put for the highlight argument and to add popups, check what she put for the popup argument
addLegend(pal = pal1,
values = ~Perc_StudentsE,
opacity = 0.7,
title = "Highest Percentage of Students in Charlottesville and Richmond regions for 2020",
position = "bottomleft")
#
HDSpatial_Updated <- HousingDataSpatial %>%
mutate(county_tract = paste(COUNTYFP,TRACTCE, sep = "")) %>%
select(1, 37, 3:5, 34:36)
#
HDSpatial_Updated <- HousingDataSpatial %>%
mutate(county_tract = paste(COUNTYFP,TRACTCE, sep = "")) %>%
select(1, 36, 3:5, 33:35)
#
cvl_rva_measures_Spatial <- full_join(cvl_rva_measures, HDSpatial_Updated, by = "county_tract") %>%
sf::st_as_sf() |>
sf::st_transform(crs = 4326)
#
pal2 <-  colorNumeric("viridis", cvl_rva_measures_Spatial$iso_b_block, reverse = TRUE)
cvl_rva_measures_Spatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal2(iso_b_block),
fillOpacity = 0.6,
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", cvl_rva_measures_Spatial$County, "<br>",
"Tract: ", cvl_rva_measures_Spatial$NAME.x, "<br>",
"Isolation Index: ", cvl_rva_measures_Spatial$iso_b_block)) %>%
addLegend(pal = pal2,
values = ~iso_b_block,
opacity = 0.7,
title = "Black Isolation Index (2020)",
position = "bottomleft")
#Same graph different output
Tenure_perc_by_race %>%
filter(Tenure_Type == "Renter" & Race %in% race ) %>%
ggplot(aes(x = Tenure_Type, y = `Percentage (Estimated)`, fill = Race)) +
scale_fill_viridis_c() +
geom_boxplot() +
facet_wrap(~Region) +
labs(title = "Racial Composition of Renters in CVL and RVA", x = "Tenure Type")
Tenure_perc_by_race <- Tenure_By_Race %>%
mutate(Perc_WRenters = (White_rentersE/RentersE), Perc_WOwners = (White_ownersE/OwnersE), Perc_BRenters = (Black_rentersE/RentersE), Perc_BOwners = (Black_ownersE/OwnersE), Perc_NativeAmOwners = (NativeAm_ownersE/OwnersE), Perc_NativeAmRenters = (NativeAm_rentersE/RentersE),  Perc_AsianOwners = (Asian_ownersE/OwnersE), Perc_AsianRenters = (Asian_rentersE/RentersE), Perc_PacificIslanderOwner = (PacificIslander_ownerE/OwnersE), Perc_PacificIslanderRenter = (PacificIslander_renterE/RentersE), Perc_HispanicLatinoOwner = (HispanicLatino_ownerE/OwnersE), Perc_HispanicLationRenterE = (HispanicLation_renterE/RentersE)) %>%
select(1:5, 48:59)
Tenure_perc_by_race <- Tenure_perc_by_race %>%
pivot_longer(., cols = c(Perc_AsianOwners, Perc_WRenters, Perc_WOwners, Perc_BOwners, Perc_BRenters, Perc_NativeAmOwners, Perc_NativeAmRenters, Perc_AsianRenters, Perc_PacificIslanderOwner, Perc_PacificIslanderRenter, Perc_HispanicLatinoOwner, Perc_HispanicLationRenterE), names_to = "Variable", values_to = "Percentage (Estimated)") %>%
mutate(Race = case_when(
str_detect(Variable, "Asian") ~ "Asian",
str_detect(Variable, "B") ~ "Black",
str_detect(Variable, "NativeAm") ~ "Native American",
str_detect(Variable, "PacificIslander") ~ "Pacific Islander",
str_detect(Variable, "Hispanic") ~ "Hispanic or Latino",
str_detect(Variable, "WRenters") ~ "White",
str_detect(Variable, "WOwners") ~ "White"
),
Variable = case_when(
str_detect(Variable, "Owner") ~ "Owner",
str_detect(Variable, "Renter") ~ "Renter"
))
Tenure_perc_by_race <- rename(Tenure_perc_by_race, Tenure_Type = Variable)
#Same graph different output
Tenure_perc_by_race %>%
filter(Tenure_Type == "Renter" & Race %in% race ) %>%
ggplot(aes(x = Tenure_Type, y = `Percentage (Estimated)`, fill = Race)) +
scale_fill_viridis_c() +
geom_boxplot() +
facet_wrap(~Region) +
labs(title = "Racial Composition of Renters in CVL and RVA", x = "Tenure Type")
#Same graph different output
Tenure_perc_by_race %>%
filter(Tenure_Type == "Renter" & Race %in% race ) %>%
ggplot(aes(x = Tenure_Type, y = `Percentage (Estimated)`, fill = Race)) +
scale_fill_viridis_d() +
geom_boxplot() +
facet_wrap(~Region) +
labs(title = "Racial Composition of Renters in CVL and RVA", x = "Tenure Type")
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter" & Race %in% race) %>%
ggplot(aes(x = `Percentage (Estimated)`, y = PercRentBurdenE, color = Region.y)) +
scale_color_viridis_d() +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Race) +
labs(title = "Demographic of Renter vs Rent Burden in CVL and RVA", x = "Percentage of Renter (Estimated)", y = "Rent as a Percentage of Income", color = "Region")
Tenure_and_Housing_Data <- full_join(Tenure_perc_by_race, ACS_Housing_Data, by = "GEOID") %>%
select(1,6:30)
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter" & Race %in% race) %>%
ggplot(aes(x = `Percentage (Estimated)`, y = PercRentBurdenE, color = Region.y)) +
scale_color_viridis_d() +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Race) +
labs(title = "Demographic of Renter vs Rent Burden in CVL and RVA", x = "Percentage of Renter (Estimated)", y = "Rent as a Percentage of Income", color = "Region")
#
HDSpatial_Updated <- HousingDataSpatial %>%
mutate(county_tract = paste(COUNTYFP,TRACTCE, sep = ""))
#
cvl_rva_measures_Spatial <- full_join(cvl_rva_measures, HDSpatial_Updated, by = "county_tract") %>%
sf::st_as_sf() |>
sf::st_transform(crs = 4326)
#
pal2 <-  colorNumeric("viridis", cvl_rva_measures_Spatial$iso_b_block, reverse = TRUE)
cvl_rva_measures_Spatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal2(iso_b_block),
fillOpacity = 0.6,
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", cvl_rva_measures_Spatial$County, "<br>",
"Tract: ", cvl_rva_measures_Spatial$NAME.x, "<br>",
"Isolation Index: ", cvl_rva_measures_Spatial$iso_b_block)) %>%
addLegend(pal = pal2,
values = ~iso_b_block,
opacity = 0.7,
title = "Black Isolation Index (2020)",
position = "bottomleft")
lm(dissim_wb_block ~ RentTaxRatio, data = cvl_rva_measures_Spatial)
lm(iso_b_block ~ RentTaxRatio, data = cvl_rva_measures_Spatial) #-0.1346
lm(dissim_wb_block ~ RentTaxRatio, data = cvl_rva_measures_Spatial) #-0.1346
lm(iso_b_block ~ RentTaxRatio, data = cvl_rva_measures_Spatial) #0.3346
cvl_rva_measures_Spatial %>%
ggplot(aes(x = RentTaxRatio, y = dissim_wb_block)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Region)
cvl_rva_measures_Spatial %>%
ggplot(aes(x = RentTaxRatio, y = iso_b_block)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Region)
lm(RentTaxRatio ~ dissim_wb_block, data = cvl_rva_measures_Spatial) #-0.1346
lm(RentTaxRatio ~ iso_b_block, data = cvl_rva_measures_Spatial) #0.3346
cvl_rva_measures_Spatial %>%
ggplot(aes(x = dissim_wb_block, y = RentTaxRatio)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Region)
cvl_rva_measures_Spatial %>%
ggplot(aes(x = iso_b_block, y = RentTaxRatio)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Region)
#FOR THE POSTER
cvl_rva_measures_Spatial %>%
filter(Region == "Charlottesville") %>%
ggplot() +
geom_sf(aes(fill=iso_b_block)) +
scale_fill_viridis_c() +
scale_color_viridis_c() +
ggtitle("Black Isolation Index in Charlottesville", subtitle = "2020 ACS") +
labs(fill = "Isolation Index")
#FOR THE POSTER
cvl_rva_measures_Spatial %>%
ggplot() +
geom_sf(aes(fill=iso_b_block)) +
scale_fill_viridis_c() +
scale_color_viridis_c() +
ggtitle("Black Isolation Index in Charlottesville", subtitle = "2020 ACS") +
labs(fill = "Isolation Index")
cvl_rva_measures_Spatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal2(iso_b_block),
fillOpacity = 0.6,
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", cvl_rva_measures_Spatial$County, "<br>",
"Tract: ", cvl_rva_measures_Spatial$NAME.x, "<br>",
"Isolation Index: ", cvl_rva_measures_Spatial$iso_b_block)) %>%
addLegend(pal = pal2,
values = ~iso_b_block,
opacity = 0.7,
title = "Black Isolation Index (2020)",
position = "bottomleft")
#FOR THE POSTER
cvl_rva_measures_Spatial %>%
ggplot() +
geom_sf(aes(fill=iso_b_block)) +
scale_fill_viridis_c() +
scale_color_viridis_c() +
ggtitle("Black Isolation Index in CVL and RVA", subtitle = "2020 ACS") +
labs(fill = "Isolation Index")
#FOR THE POSTER
Iso_index_cvl_rva <- cvl_rva_measures_Spatial %>%
ggplot() +
geom_sf(aes(fill=iso_b_block)) +
scale_fill_viridis_c() +
scale_color_viridis_c() +
ggtitle("Black Isolation Index in CVL and RVA", subtitle = "2020 ACS") +
labs(fill = "Isolation Index")
ggsave("Black Isolation Index in Richomond.png", Iso_index_cvl_rva)
View(Tenure_and_Housing_Data)
ACS_Housing_Data %>%
group_by(County) %>%
summarize(Rent_Tax_RaTio_all = median(RentTaxRatio, na.rm = TRUE))
ACS_Housing_Data %>%
group_by(Region) %>%
summarize(Rent_Tax_RaTio_all = median(RentTaxRatio, na.rm = TRUE))
ACS_Housing_Data %>%
group_by(County) %>%
summarize(Rent_Tax_RaTio_all = median(RentTaxRatio, na.rm = TRUE))
ACS_Housing_Data %>%
group_by(Region) %>%
summarize(Rent_Tax_RaTio_all = median(RentTaxRatio, na.rm = TRUE))
Tenure_and_Housing_Data %>%
filter(`Percentage (Estimated)` >= 0.5, Race == "Black") %>%
group_by(Region.y) %>%
summarize(Rent_Tax_RaTio_Black = median(RentTaxRatio, na.rm = TRUE))
Tenure_and_Housing_Data %>%
filter(`Percentage (Estimated)` >= 0.5, Race == "Black") %>%
group_by(County.y) %>%
summarize(Rent_Tax_RaTio_Black = median(RentTaxRatio, na.rm = TRUE))
Tenure_and_Housing_Data %>%
filter(`Percentage (Estimated)` >= 0.5, Race == "Black") %>%
group_by(Region.y) %>%
summarize(Rent_Tax_RaTio_Black = median(RentTaxRatio, na.rm = TRUE))
b <- Tenure_and_Housing_Data %>%
filter(`Percentage (Estimated)` >= 0.5, Race == "Black") %>%
group_by(Region.y) %>%
summarize(Rent_Tax_RaTio_Black = median(RentTaxRatio, na.rm = TRUE))
all<- ACS_Housing_Data %>%
group_by(Region) %>%
summarize(Rent_Tax_RaTio_all = median(RentTaxRatio, na.rm = TRUE))
View(Tenure_perc_by_race)
View(Poverty_By_Race)
all<- ACS_Housing_Data %>%
group_by(Region) %>%
summarize(Rent_Tax_RaTio_all = median(RentTaxRatio, na.rm = TRUE))
b
Tenure_perc_by_race %>%
filter(Tenure_Type == "Renter") %>%
filter(Rent_Burdened != "No") %>%
group_by(Rent_Burdened, County, Race) %>%
select(4,7,8) %>%
summarize(Perc_Renters = median(Tenure_perc_by_race$`Percentage (Estimated)`, na.rm = TRUE)) %>%
arrange(desc(Perc_Renters))
#FOR THE POSTER
Iso_index_cvl_rva <- cvl_rva_measures_Spatial %>%
ggplot() +
geom_sf(aes(fill=iso_b_block)) +
scale_fill_viridis_c() +
scale_color_viridis_c() +
ggtitle("Black Isolation Index in Charlottesville and Richmond, VA", subtitle = "Data from the 2020 American Community Survey (ACS)") +
labs(fill = "Isolation Index")
ggsave("Black Isolation Index in Richmond.png", Iso_index_cvl_rva)
Tenure_and_Housing_Data <- full_join(Tenure_perc_by_race, ACS_Housing_Data, by = "GEOID") %>%
select(1,6:30)
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter" & Race %in% race) %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Region.y)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Race) +
labs(title = "Demographic of Renter vs Rent Exploitation in CVL and RVA", x = "Percentage of Renter (Estimated)", y = "Rent to Tax Ratio", color = "Region")
# Tenure_and_Housing_Data  %>%
#   filter(Tenure_Type == "Renter" & Race %in% race) %>%
#   ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio)) +
#   geom_point(alpha = 0.3) +
#   geom_smooth(method = "lm") +
#   facet_wrap(~Region.y)
#Before, it was facet_wrapped by race and colored based on the tenure typem but because I filtered out for renters, idk which graph looks better and is "easier" to read and understand, should I remove geom_point, even though she told me to add it?
Poverty_By_Race %>%
group_by(Region) %>%
summarize(Median_perc_below_poverty = median(Perc_Total_BelowPovertyE, na.rm = TRUE), Median_Gini_Index = median(Gini_IndexE, na.rm = TRUE))
Poverty_Stats <- Poverty_By_Race %>%
filter(Gini_IndexE >= 0.5 & Perc_Total_BelowPovertyE >= 0.5) %>%
select(3,4,36,50) %>%
arrange(desc(Gini_IndexE))
knitr::kable(Poverty_Stats)
Poverty_By_Race %>%
ggplot(aes(x = Perc_Total_BelowPovertyE, y = Gini_IndexE)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Region)
#model
lm(Gini_IndexE ~ Perc_Total_BelowPovertyE, data = Poverty_By_Race)
lm(Perc_Total_BelowPovertyE ~ Gini_IndexE, data = Poverty_By_Race)
Poverty_By_Race %>%
group_by(County) %>%
summarize(Median_perc_below_poverty = median(Perc_Total_BelowPovertyE, na.rm = TRUE), Median_Gini_Index = median(Gini_IndexE, na.rm = TRUE))
Poverty_Stats <- Poverty_By_Race %>%
filter(Gini_IndexE >= 0.5 & Perc_Total_BelowPovertyE >= 0.5) %>%
select(3,4,36,50) %>%
arrange(desc(Gini_IndexE))
knitr::kable(Poverty_Stats)
ACS_Housing_Data %>%
ggplot(aes(ACS_Housing_Data$PercRentBurdenE, fill = Region)) +
geom_histogram()
?scale_color_brewer
Tenure_and_Housing_Data  %>%
filter(Tenure_Type == "Renter" & Race %in% race) %>%
ggplot(aes(x = `Percentage (Estimated)`, y = RentTaxRatio, color = Region.y)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm") +
facet_wrap(~Race) +
labs(title = "Demographic of Renter vs Rent Exploitation in Charlottesville and Richmond, VA", x = "Percentage of Renter (Estimated)", y = "Rent to Tax Ratio", color = "Region")
#Same graph different output
Tenure_perc_by_race %>%
filter(Tenure_Type == "Renter" & Race %in% race ) %>%
ggplot(aes(x = Tenure_Type, y = `Percentage (Estimated)`, fill = Race)) +
scale_fill_viridis_d() +
geom_boxplot() +
facet_wrap(~Region) +
labs(title = "Racial Composition of Renters in Charlottesville and Richmond, Virginia", x = "Tenure Type")
#rent exploitation is another way racial capitalism works to extract resources from the black community, hidden from view, how are these things still operating but are less visible to the average viewer?
#importing data
library(readr)
library(tidycensus)
library(tidyverse)
library(tigris)
library(leaflet)
library(sf)
library(DT)
library(GGally)
library(RColorBrewer)
ACS_Housing_Data <- read_csv("Housing_Data.csv")
Income_By_Tenure <- read_csv("Income_By_Tenure.csv")
Tenure <- read_csv("Tenure.csv")
Tenure_By_Income <- read_csv("Tenure_By_Income.csv")
Tenure_By_Race <- read_csv("Tenurebyrace.csv")
Poverty_By_Race <- read_csv("PovertyByRace.csv")
cvl_rva_measures <- read_csv("cvl_rva_measures.csv")
race <- c("White","Black", "Asian", "Hispanic or Latino")
countytracts <- tracts(state = "VA", county = counties, year = 2020)
countytracts <- countytracts |>
mutate(GEOID = as.numeric(countytracts$GEOID))
HousingDataSpatial <- full_join(ACS_Housing_Data, countytracts, by = "GEOID") |>
sf::st_as_sf() |>
mutate(INTPTLAT = as.numeric(countytracts$INTPTLAT), INTPTLON = as.numeric(countytracts$INTPTLON))|>
sf::st_transform(crs = '+proj=longlat +datum=WGS84') #one way to reference a CRS, another way (which Claibourne used) is cvl_rents <- st_transform(cvl_rents, 4326) because leaflet expects the crs to be 4326
pal3 <-  colorNumeric("YlOrRd", HousingDataSpatial$RentTaxRatio, reverse = TRUE)
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal3(RentTaxRatio),
fillOpacity = 0.6,
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", HousingDataSpatial$County, "<br>",
"Tract: ", HousingDataSpatial$NAMELSAD, "<br>",
"Rent to Tax Ratio: ", HousingDataSpatial$RentTaxRatio)) %>%
addLegend(pal = pal,
values = ~RentTaxRatio,
opacity = 0.7,
title = "Rent to Tax Ratio (2020)",
position = "bottomleft")
pal <-  colorNumeric("YlOrRd", HousingDataSpatial$PercRentBurdenE, reverse = TRUE)
HousingDataSpatial %>%
leaflet() %>%
addTiles() %>%
addPolygons(color = "black",
fillColor = ~pal(PercRentBurdenE),
fillOpacity = 0.6,
weight = 2,
highlight = highlightOptions(
weight = 3,
fillOpacity = 0.9,
bringToFront = T),
popup = paste0("County: ", HousingDataSpatial$County, "<br>",
"Tract: ", HousingDataSpatial$NAMELSAD, "<br>",
"Percentage of Rent Burden: ", HousingDataSpatial$PercRentBurdenE)) %>%
addLegend(pal = pal,
values = ~PercRentBurdenE,
opacity = 0.7,
title = "Percentage of Rent Burden (2020)",
position = "bottomleft")
#
HDSpatial_Updated <- HousingDataSpatial %>%
mutate(county_tract = paste(COUNTYFP,TRACTCE, sep = ""))
